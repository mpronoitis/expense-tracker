{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "Expense Tracker API",
    "description" : "Active profile: DEFAULT",
    "version" : "2.8.4"
  },
  "servers" : [ {
    "url" : "http://10.167.7.78:8081",
    "description" : "Generated server url"
  } ],
  "security" : [ {
    "bearerAuth" : [ ]
  } ],
  "paths" : {
    "/expenses/{userId}/update/{expenseId}" : {
      "put" : {
        "tags" : [ "expense-controller" ],
        "summary" : "Update an expense",
        "description" : "Return the updated Expense",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExpenseUpdateRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseExpenseResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/budgets/{userId}/update/{budgetId}" : {
      "put" : {
        "tags" : [ "budget-controller" ],
        "summary" : "Update a Budget",
        "description" : "Return the updated Budget",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "budgetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BudgetupdateRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseBudgetResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/public/registration/sign-up" : {
      "post" : {
        "tags" : [ "registration-controller" ],
        "summary" : "Create a new user fo the application",
        "description" : "Return the created User",
        "operationId" : "signUp",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegisteringUserRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseRegisteringUserResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/public/auth/authenticate" : {
      "post" : {
        "tags" : [ "auth-controller" ],
        "summary" : "Login to the application",
        "description" : "Return a token associated with the user",
        "operationId" : "authenticate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/incomes" : {
      "get" : {
        "tags" : [ "income-controller" ],
        "summary" : "Find all incomes of a user",
        "description" : "Return a list with all incomes",
        "operationId" : "getIncomes",
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseListIncomeResponseDTO"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "income-controller" ],
        "summary" : "Create a new Income for a user",
        "description" : "Return the created Income",
        "operationId" : "createIncome",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IncomeRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseIncomeResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/{userId}/create" : {
      "post" : {
        "tags" : [ "expense-controller" ],
        "summary" : "Create a new expense for a specific category",
        "description" : "Return the created Expense",
        "operationId" : "createExpense",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExpenseRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseExpenseResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/budgets/{userId}/create" : {
      "post" : {
        "tags" : [ "budget-controller" ],
        "summary" : "Create a new budget for a category",
        "description" : "Return the created Budget",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BudgetRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseBudgetResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/incomes/{userId}/total" : {
      "get" : {
        "tags" : [ "income-controller" ],
        "summary" : "Get the total Income of a user",
        "description" : "Return the total income",
        "operationId" : "getTotalIncome",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseTotalIncomeResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/incomes/{userId}/net-income" : {
      "get" : {
        "tags" : [ "income-controller" ],
        "summary" : "Get the Net Income of a User(Total Income - Expenses)",
        "description" : "Return the Net Income",
        "operationId" : "getNetIncome",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseTotalIncomeResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/{userId}" : {
      "get" : {
        "tags" : [ "expense-controller" ],
        "summary" : "Get all expenses of the user",
        "description" : "Return a list of all expenses",
        "operationId" : "getAllExpenses",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseListExpenseResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/budgets/{userId}" : {
      "get" : {
        "tags" : [ "budget-controller" ],
        "summary" : "Find all budgets of a user",
        "description" : "Return a list with the budgets",
        "operationId" : "findAll",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseListBudgetResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/budget/{userId}/remaining/{budgetId}" : {
      "get" : {
        "tags" : [ "budget-controller" ],
        "summary" : "Find remaining budget of a category",
        "description" : "Return the amount of budget",
        "operationId" : "getRemaining",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "categoryName",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "budgetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseBigDecimal"
                }
              }
            }
          }
        }
      }
    },
    "/budget/{userId}/delete/{budgetId}" : {
      "delete" : {
        "tags" : [ "budget-controller" ],
        "summary" : "Delete a budget",
        "description" : "Return a message if the operation was successful",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "budgetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseNull"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponseString"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiResponseNull" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "payload" : {
            "$ref" : "#/components/schemas/Null"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          }
        }
      },
      "ErrorDTO" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "Null" : {
        "type" : "object"
      },
      "ExpenseUpdateRequestDTO" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "amount" : {
            "type" : "number"
          },
          "description" : {
            "type" : "string"
          },
          "paymentMethod" : {
            "type" : "string",
            "enum" : [ "CASH", "CARD", "BANK_TRANSFER" ]
          },
          "categoryName" : {
            "type" : "string"
          }
        }
      },
      "ApiResponseExpenseResponseDTO" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "payload" : {
            "$ref" : "#/components/schemas/ExpenseResponseDTO"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          }
        }
      },
      "CategoryDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "ExpenseResponseDTO" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "amount" : {
            "type" : "number"
          },
          "description" : {
            "type" : "string"
          },
          "paymentMethod" : {
            "type" : "string",
            "enum" : [ "CASH", "CARD", "BANK_TRANSFER" ]
          },
          "category" : {
            "$ref" : "#/components/schemas/CategoryDTO"
          }
        }
      },
      "BudgetupdateRequestDTO" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "limitAmount" : {
            "type" : "number"
          }
        }
      },
      "ApiResponseBudgetResponseDTO" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "payload" : {
            "$ref" : "#/components/schemas/BudgetResponseDTO"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          }
        }
      },
      "BudgetResponseDTO" : {
        "type" : "object",
        "properties" : {
          "limitAmount" : {
            "type" : "number"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "category" : {
            "$ref" : "#/components/schemas/CategoryDTO"
          }
        }
      },
      "RegisteringUserRequestDTO" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 0
          },
          "lastName" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 0
          },
          "username" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 0
          },
          "password" : {
            "type" : "string",
            "pattern" : "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@.$!%*#?&-])[A-Za-z\\d@.$!%*#?&-]{8,}$"
          }
        },
        "required" : [ "firstName", "lastName", "password", "username" ]
      },
      "ApiResponseRegisteringUserResponseDTO" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "payload" : {
            "$ref" : "#/components/schemas/RegisteringUserResponseDTO"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          }
        }
      },
      "RegisteringUserResponseDTO" : {
        "type" : "object",
        "properties" : {
          "userRegistry" : {
            "$ref" : "#/components/schemas/UserRegistryDTO"
          }
        }
      },
      "UserRegistryDTO" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          }
        }
      },
      "AuthRequestDTO" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 0
          },
          "password" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 0
          }
        },
        "required" : [ "password", "username" ]
      },
      "ApiResponseString" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "payload" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          }
        }
      },
      "IncomeRequestDTO" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "amount" : {
            "type" : "number"
          },
          "source" : {
            "type" : "string"
          },
          "paymentMethod" : {
            "type" : "string",
            "enum" : [ "CASH", "CARD", "BANK_TRANSFER" ]
          }
        },
        "required" : [ "amount", "date", "paymentMethod", "source" ]
      },
      "ApiResponseIncomeResponseDTO" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "payload" : {
            "$ref" : "#/components/schemas/IncomeResponseDTO"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          }
        }
      },
      "IncomeResponseDTO" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "amount" : {
            "type" : "number"
          },
          "source" : {
            "type" : "string"
          },
          "paymentMethod" : {
            "type" : "string",
            "enum" : [ "CASH", "CARD", "BANK_TRANSFER" ]
          }
        }
      },
      "ExpenseRequestDTO" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "amount" : {
            "type" : "number"
          },
          "description" : {
            "type" : "string"
          },
          "paymentMethod" : {
            "type" : "string",
            "enum" : [ "CASH", "CARD", "BANK_TRANSFER" ]
          },
          "categoryName" : {
            "type" : "string"
          }
        },
        "required" : [ "amount", "categoryName", "date", "description", "paymentMethod" ]
      },
      "BudgetRequestDTO" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "limitAmount" : {
            "type" : "number"
          },
          "categoryName" : {
            "type" : "string"
          }
        },
        "required" : [ "categoryName", "endDate", "limitAmount", "startDate" ]
      },
      "ApiResponseListIncomeResponseDTO" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "payload" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IncomeResponseDTO"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          }
        }
      },
      "ApiResponseTotalIncomeResponseDTO" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "payload" : {
            "$ref" : "#/components/schemas/TotalIncomeResponseDTO"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          }
        }
      },
      "TotalIncomeResponseDTO" : {
        "type" : "object",
        "properties" : {
          "totalIncome" : {
            "type" : "number"
          }
        }
      },
      "ApiResponseListExpenseResponseDTO" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "payload" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExpenseResponseDTO"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          }
        }
      },
      "ApiResponseListBudgetResponseDTO" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "payload" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BudgetResponseDTO"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          }
        }
      },
      "ApiResponseBigDecimal" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "payload" : {
            "type" : "number"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "name" : "bearerAuth",
        "in" : "header",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}